set $domain "set_your_domain_here";

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 3600;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        server_name $domain;
        # Redirect all traffic to SSL
        rewrite ^ https://$server_name$request_uri? permanent;
    }


    server {
        listen 443 ssl default_server;
        gzip off;

        # enables SSLv3/TLSv1, but not SSLv2 which is weak and should no longer be used.
        ssl_protocols SSLv3 TLSv1;
  
        # disables all weak ciphers
        ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;

        server_name $$domain;
        ## Access and error logs.
        access_log /var/log/nginx/access.log;
        error_log  /var/log/nginx/error.log info;

        ## Keep alive timeout set to a greater value for SSL/TLS.
        keepalive_timeout 75 75;

        ## See the keepalive_timeout directive in nginx.conf.
        ## Server certificate and key.
        ssl on;
        ssl_certificate /etc/ssl/certs/example.com-ssl.crt;
        ssl_certificate_key /etc/ssl/private/example.com-ssl.key;
        ssl_session_timeout  5m;

        ## Strict Transport Security header for enhanced security. See
        ## http://www.chromium.org/sts. I've set it to 2 hours; set it to
        ## whichever age you want.
        add_header Strict-Transport-Security "max-age=7200";

        location / {
            proxy_pass  https://api.openai.com/;
            proxy_ssl_server_name on;
            proxy_set_header Host api.openai.com;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}